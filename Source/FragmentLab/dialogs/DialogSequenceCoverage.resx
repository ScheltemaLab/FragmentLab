<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolExportPdf.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAASlSURBVFhHvZdbTBRXHMapBl4sPvjQ58YXfWhUwPhKjS9N
        SjHGkD6UtA8EkLulpJDY2IsoVgOopTaBWqxGbdKWkZRKi0SlupS2CBVbWeR+v7uwOzs7O7uzX///M6wF
        Oruzxk2/5Etm9sz+vv+Zc9mzMSZ6gZxFbicPR8nMYiazLXUpPj4eZWVlqK+vj4qZxUxmGxGhlRIXF4fu
        7m5oPh+WXXJUzCxmMpszjKi1KiV/SO5IS0uDrusYnZzB8PhUVMwsZjKbMi5w4Ho5XoqJwcvkkoMHMXCz
        FZ3fS5Z+0NKKiZm5iKxpPhQVFXEBkhG5Vo4MCr+4bRuu7t4dkS/v2IHLSUmYmV/E7MITS/MwhC3gMBXQ
        um8f7peUYKShAfbz59FZXCyuH9fWwpaejsd1deL+UVUV7uzfj4adu9A7MIxFx7KlfX5/+AKOUgG/bN0K
        Oz00Wl2NheZmDFVUYKymBsPl5Rg5exZP7t5FL7V3U/i97dtxe1cCBscmseR0WdpvVUAlFdC1YQMGDxyA
        bLNh/swZDKSmYiwnB33JyZitrISzpQXTpaWwJyaia+NGPEhIxMT0LFxuxdJ+moRhC6ijAkbJM3v2YG7v
        XnE9nZAA5coVyNT7iS1bsETrmT8PeiwxCXM0vorHY2leBWELoLWBSfJ8bCyctGkE7VrjzZA3/2tn8qtw
        LLugql4oE1PwUE/52syWBZC5EW+9/Q567AP4s7cfD/sG8Kh/CH1DoxgcHccIhfAr55m/4FgSm4ybeuel
        MXYer4bS1g6vpplaDwTCFvAKeSf5Vn5BAVSvJsCKRxX2qGyvsOplG1Be27y8lMaf4OnqgUZvg+/NHLAo
        ICiJH9L1gFg2kVo+eQ4qFWDWFjQzn6EAXczaSC1/fBqexmbTtqCt5kBQTwt4Fi+99iZ8K/t9OEdUQGFh
        oXiYxywS+2liOjOKTNtWm5nM5gwjylyiAH5lZpD11n1+ODPfhTOv1LR9tZkZeQE0acwg6+0+VQO1oQmu
        0k9M21ebmREVUEDL0Ec9s5Iq/Qj56Elx7S6vgr7oENehxExmc4YRZS6J9wFe3+GktdngynsfAeqVuLf9
        DvVag7gOJWYymzOMKHNJ+fn5YqMJJe3XTriy30OANqWgAjS+zqxiBGiTCiVmMpszjChzSXl5+WLnWy+G
        a+1/0Iw/DJ+9H77uHnhvtkH97gd4f74Fz8VrkD86tfL0f8VMZnOGEWUuKTc3D27FI74UoG1Y/bYR2r0O
        GvMbkMuOIbBueLj3/vFJeFtuQz5yHMup6TQ5P4PvL/vKE4aYyWzOMKLMJeXk5MIlu6EvLQugTuc55Vwt
        lC/qxWy2kuerq3Cf/hyer7+B/EEF9IVF8Tkzmc0ZRpS5pOxDOeIE4/vbDqXmS4KcoNf9UEAilWb7De4T
        1fDTL6n3jk18xkxmc4YRZS4pMztbnOGeVwH+Fey4/3SyMpPZnGFEmUvKyMwSp9hoi5nM5gwjylwXXk95
        gw4e07Rz6StffX4xi5nM5gwjylwpsfT36XpTM52AJjA1Ox8VM+t60w0wmzOMqNC6tGnTi8jIOoRjFZ9G
        xcxiJrONiPD6H/+ex8T8A9VJIazmxRtoAAAAAElFTkSuQmCC
</value>
  </data>
</root>